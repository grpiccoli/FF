@model DownloadViewModel
@using FPFI.Models.ViewModels

<form asp-action="Download" id="modal-form">
    @await Html.PartialAsync("_ModalHeader", new ModalHeader
    {
        Heading = "Choose all formats you wish to download for Entry " + Model.Id + " FPFI Version: " + Model.Version
    })
    <input class="hidden" asp-for="Id" />
    <input class="hidden" asp-for="Version" />
    <div class="modal-body">
        <span id="checkboxVal" class="text-danger"></span>
        <div class="row">
            <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2">
                <h1>
                    <span class="icon-excel" style="text-align: center;">
                        <span class="path1"></span><span class="path2"></span>
                    </span>
                </h1>
                <span style="font-family:Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif">XLSX</span>
                <br />
                <input class="hidden" asp-for="Xlsx" />
                <div id="Xlsx" class="toggle add">
                    <span></span>
                    <span></span>
                </div>
            </div>
            <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2">
                <h1>
                    <span class="icon-xml">
                        <span class="path1"></span><span class="path2"></span><span class="path3"></span><span class="path4"></span><span class="path5"></span><span class="path6"></span><span class="path7"></span><span class="path8"></span><span class="path9"></span><span class="path10"></span><span class="path11"></span>
                    </span>
                </h1>
                <span style="font-family:Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif">XML</span>
                <br />
                <input class="hidden" asp-for="Xml" />
                <div id="Xml" class="toggle add">
                    <span></span>
                    <span></span>
                </div>
            </div>
            <div class="col-lg-2 col-md-2 col-sm-2 col-xs-2">
                <h1>
                    <span class="icon-csv">
                        <span class="path1"></span><span class="path2"></span><span class="path3"></span><span class="path4"></span>
                    </span>
                </h1>
                <span style="font-family:Impact, Haettenschweiler, 'Arial Narrow Bold', sans-serif">CSV</span>
                <br />
                <input class="hidden" asp-for="Csv" />
                <div id="Csv" class="toggle add">
                    <span></span>
                    <span></span>
                </div>
            </div>
            <span class="col-lg-12 col-md-12 col-sm-12 col-xs-12 text-danger" id="FilesVal"></span>
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <br />
                <label asp-for="Password"></label>
                <input asp-for="Password" class="form-control" />
                <meter min="0" max="4" id="password-strength-meter" value="0"></meter>
                <p id="result"></p>
                <span asp-validation-for="Password" class="text-danger"></span>
                <span id="PasswordVal" class="text-danger"></span>
            </div>
        </div>
    </div>
    <br />
    @await Html.PartialAsync("_ModalFooter", new ModalFooter { SubmitButtonText = "Request Download" })
</form>

@*@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}*@
<script src="~/js/zxcvbn.js"></script>
<script>
    $('.add').on('click', function () {
        var id = $(this).attr('id');
        $('input#' + id).prop('checked', !($(this).hasClass('added')));
        console.log($('input#' + id));
        $(this).toggleClass('added just-added');
        $(this).mouseleave(function () {
            $(this).removeClass("just-added");
        });
        checkbox();
    });
    $("#Password").keydown(function () {
        var strength = {
            0: "Bad",
            1: "Weak",
            2: "Good",
            3: "Strong",
            4: "Very Strong"
        }
        var val = $("#Password").val();
        var result = zxcvbn(val);
        $("#password-strength-meter").val(result.score + 1);
        console.log(result);
        if (val !== "") {
            $("#result").html("Strength: " + strength[result.score]);
        } else {
            $("#result").html("");
        }
    });
    function checkbox() {
        $("span#FilesVal").html("");
        if ($(".added").length === 0) {
            //Then display the message
            $("span#FilesVal").html("Please select at least one File Type");
            return true;
        }
        return false;
    }
    function password() {
        $("#PasswordVal").html("");
        if (!$("#Password").val().match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$/)) {
            //Then display the message
            $("#PasswordVal").html("Password must at least have one upper-case and lower-case letter and one number");
            return true;
        }
        return false;
    }
    $(function () {
        $("#Password").change(function () {
            password();
        });
        //Change the button control here
        $("form#modal-form").submit(function (e) {
            //check if checked count is equal to zero
                //Then display the message
            var stop = false;
            stop = checkbox();
            if (!stop) {
                stop = password();
            } else { password(); }
            if (stop) {
                e.preventDefault();
            }
        });
    });
</script>